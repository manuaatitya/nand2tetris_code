// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:

    /* Implementation using the basic building blocks
        // Get the complement values of the selection bits
        Not(in = sel[0], out = notsel0);
        Not(in = sel[1], out = notsel1);

        // Logic to set a = in if sel == 00
        And(a = notsel0, b = in, out = temp0);
        And(a = temp0, b = notsel1, out = a);

        // Logic to set b = in if sel == 01
        And(a = sel[0], b = in, out = temp1);
        And(a = temp1, b = notsel1, out = b);

        // Logic to set c = in if sel == 10
        And(a = notsel0, b = in, out = temp2);
        And(a = temp2, b = sel[1], out = c);

        // Logic to set d = in if sel == 11
        And(a = sel[0], b = in, out = temp3);
        And(a = temp3, b = sel[1], out = d); 
    */

    // Using the demux chip built already
    Dmux(in = in, sel = sel[1], a = temp0, b = temp1);
    Dmux(in = temp0, sel = sel[0], a = a, b = b);
    Dmux(in = temp1, sel = sel[0], a = c, b = d);
}